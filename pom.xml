<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.yueshengjdyp</groupId>
    <artifactId>hotelsupplies</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>hotelsupplies Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <!-- 自定义属性 -->
    <properties>
        <spring.version>4.1.6.RELEASE</spring.version>
        <hibernate.version>4.3.5.Final</hibernate.version>
        <spring-data.version>1.9.2.RELEASE</spring-data.version>
        <shiro.version>1.2.4</shiro.version>
        <zxing.version>3.2.1</zxing.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.7</jdk.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>hotelsupplies</finalName>

        <!-- 资源过滤 -->
        <resources>
            <resource>
                <!-- 设定主资源目录 -->
                <directory>${project.basedir}/src/main/resources</directory>
                <!--maven default生命周期,process-resources阶段执行maven-resources-plugin插件的
                resources目标处理主资源目下的资源文件时，只处理如下配置中包含的资源类型
                <includes>
                  <include>*.xml</include>
                </includes>-->

                <!--maven default生命周期，process-resources阶段执行maven-resources-plugin插件的
                resources目标处理主资源目下的资源文件时，不处理如下配置中包含的资源类型
                （剔除下如下配置中包含的资源类型）-->
                <excludes>
                    <exclude>gitKnowledge</exclude>
                    <exclude>mavenKnowledge</exclude>
                    <exclude>springMVCKnowledge</exclude>
                    <exclude>hibernateMVCKnowledge</exclude>
                    <exclude>jspKnowledge</exclude>
                </excludes>

                <!--maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources
                目标处理主资源目下的资源文件时，指定处理后的资源文件输出目录，默认是${build.outputDirectory}
                指定的目录
                <targetPath>/Users/piqiu1</targetPath>-->
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <!-- 编译插件 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                    </execution>
                </executions>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!-- 对Web项目的资源目录(如css、js目录)进行过滤。 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1-beta-1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp</directory>
                            <includes>
                                <include>**/*.css</include>
                                <include>**/*.js</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>
